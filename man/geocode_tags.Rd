% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/code-geography.R
\name{geocode_tags}
\alias{geocode_tags}
\title{Retrieve geographic coordinates}
\usage{
geocode_tags(df, google_key = Sys.getenv("Google_API_key"))
}
\arguments{
\item{df}{A dataframe or tibble}

\item{google_key}{A Google Developers API key which will need to be obtained
by the user}
}
\value{
A vector of geographic coordinates (i.e., latitude and longitude) which may then be
  used to plot locations on a map
}
\description{
\code{geocode_tags()} retrieves geographic coordinates (i.e., latitude and
  longitude) based on the locations listed in Twitter user profiles. \code{geocode_tags()}
  pulls from the Google Geocoding API, which requires a Google Geocoding API Key.
  You can easily secure a key through Google Cloud Platform;
  \href{https://developers.google.com/maps/documentation/geocoding/get-api-key}{read more here}.
  We recommend saving your Google Geocoding API Key in the \code{.Renviron} file as
  **Google_API_key**. You can quickly access this file using the R code
  \code{usethis::edit_r_environ(scope='user')}. Add a line to this file that reads:
  \code{Google_API_key="PasteYourGoogleKeyInsideTheseQuotes"}. To read your key into R,
  use the code \code{Sys.getenv('Google_API_key')}. Note that the \code{geocode_tags()}
  function retrieves your saved API key automatically and securely. Once you've
  saved the \code{.Renviron} file, quit your R session and restart. The function
  \code{geocode_tags()} will work for you from now on.
}
\examples{

\dontrun{

example_url <- "https://docs.google.com/spreadsheets/d/18clYlQeJOc6W5QRuSlJ6_v3snqKJImFhU42bRkM_OX8/"
tmp_df <- pull_tweet_data(read_tags(example_url), n = 10)
tmp_geo_coords <- geocode_tags(tmp_df)
tmp_geo_coords
tmp_geo_coords[[1]]
tmp_geo_coords[[1]][1]
tmp_geo_coords[[1]][2]
mapview::mapview(tmp_geo_coords)
}
}
\seealso{
Blog posts from \href{https://www.jessesadler.com/post/geocoding-with-r/}{Jesse Sadler} and
  \href{https://www.littlemissdata.com/blog/maps}{Laura Ellis} may also provide additional inspiration for geocoding.

  The **ggmap** package can provide additional functionality for visualizing
  geographic data.
}
